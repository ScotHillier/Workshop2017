{"version":3,"sources":["webparts/myPart/MyPartWebPart.ts"],"names":[],"mappings":";;;;;;AAAA,6BAA+B;AAC/B,oCAAsC;AAEtC,8DAIoC;AAGpC,8CAAyC;AAEzC,8DAA0E;AAG1E;IAA2C,iCAA2B;IAAtE;;IAmCA,CAAC;IAjCQ,8BAAM,GAAb;QAAA,iBA6BC;QA3BC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,EAAE,qBAAqB,CAAC,CAAC;QAE5F,EAAE,CAAA,CAAC,6BAAW,CAAC,IAAI,KAAK,iCAAe,CAAC,KAAK,CAAC,CAAA,CAAC;YAC3C,KAAK,CACC,4BAA4B,EAC5B;gBACI,MAAM,EAAE,KAAK;gBACb,WAAW,EAAE,aAAa;gBAC1B,OAAO,EAAE;oBACL,QAAQ,EAAE,kBAAkB;iBAC/B;aACJ,CACJ,CAAC,IAAI,CAAC,UAAA,QAAQ;gBACX,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAC3B,CAAC,CAAC,CAAC,IAAI,CAAC,UAAA,IAAI;gBACR,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,gBAAM,EAAE,EAAE,OAAO,EAAE,YAAU,IAAI,CAAC,KAAO,EAAE,CAAC,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;gBACnG,KAAI,CAAC,OAAO,CAAC,cAAc,CAAC,qBAAqB,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;YACvE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,CAAC;gBACN,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACT,CAAC;QACD,IAAI,CAAA,CAAC;YACD,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,gBAAM,EAAE,EAAE,OAAO,EAAE,sCAAsC,EAAE,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YACnH,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACvE,CAAC;IAGH,CAAC;IAIH,oBAAC;AAAD,CAnCA,AAmCC,CAnC0C,uCAAqB,GAmC/D","file":"webparts/myPart/MyPartWebPart.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport { Version } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneTextField\r\n} from '@microsoft/sp-webpart-base';\r\n\r\nimport * as strings from 'myPartStrings';\r\nimport MyPart from './components/MyPart';\r\nimport { IMyPartProps } from './components/IMyPartProps';\r\nimport { Environment, EnvironmentType } from '@microsoft/sp-core-library';\r\nimport { SPHttpClient, SPHttpClientResponse, ISPHttpClientOptions } from '@microsoft/sp-http';\r\n\r\nexport default class MyPartWebPart extends BaseClientSideWebPart<null> {\r\n\r\n  public render(): void {\r\n\r\n    this.context.statusRenderer.displayLoadingIndicator(this.domElement, \"Loading Contacts...\");\r\n\r\n    if(Environment.type !== EnvironmentType.Local){\r\n        fetch(\r\n              '../../_api/web/currentuser',\r\n              {\r\n                  method: 'GET',\r\n                  credentials: 'same-origin',\r\n                  headers: {\r\n                      'accept': 'application/json'\r\n                  }\r\n              }\r\n          ).then(response => {\r\n              return response.json();\r\n          }).then(json => {\r\n              ReactDom.render(React.createElement(MyPart, { message: `Hello, ${json.Title}` }), this.domElement);\r\n              this.context.statusRenderer.clearLoadingIndicator(this.domElement);\r\n          }).catch(e => {\r\n              console.log(e);\r\n          });\r\n    }\r\n    else{\r\n        ReactDom.render(React.createElement(MyPart, { message: `I'm sorry. I don't know who you are.` }), this.domElement);\r\n        this.context.statusRenderer.clearLoadingIndicator(this.domElement);\r\n    }\r\n\r\n    \r\n  }\r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}
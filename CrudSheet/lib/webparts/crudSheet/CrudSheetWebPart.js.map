{"version":3,"sources":["webparts/crudSheet/CrudSheetWebPart.ts"],"names":[],"mappings":";;;;;;AAAA,6BAA+B;AAC/B,oCAAsC;AAEtC,gEAAsG;AACtG,oDAA+C;AAE/C,8DAAmF;AACnF,8DAAmE;AAGnE;IAA8C,oCAA2B;IAAzE;;IA8CA,CAAC;IAzCW,iCAAM,GAAhB;QAEE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE7C,IAAI,CAAC,eAAe,GAAG,CAAC,6BAAW,CAAC,IAAI,KAAK,iCAAe,CAAC,KAAK,CAAC;YACnE,IAAI,qCAAmB,EAAE,GAAE,IAAI,iCAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE7D,MAAM,CAAC,iBAAM,MAAM,WAAE,CAAC;IACxB,CAAC;IAEM,iCAAM,GAAb;QAAA,iBAUC;QATC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,EAAE,qBAAqB,CAAC,CAAC;QAC5F,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,UAAC,QAAQ;YAC/C,KAAI,CAAC,OAAO,CAAC,cAAc,CAAC,qBAAqB,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;YACnE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,mBAAS,EAAE;gBAC7C,UAAU,EAAE,QAAQ;gBACpB,aAAa,EAAE,KAAI,CAAC,WAAW;gBAC/B,eAAe,EAAE,KAAI,CAAC,aAAa;gBACnC,YAAY,EAAE,KAAI,CAAC,UAAU;aAAC,CAAC,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,sCAAW,GAAlB,UAAmB,OAAgB;QACjC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IACnD,CAAC;IAEM,wCAAa,GAApB,UAAqB,OAAgB;QACnC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACrD,CAAC;IAEM,qCAAU,GAAjB;QACE,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC;IAC3C,CAAC;IAED,sBAAc,yCAAW;aAAzB;YACE,MAAM,CAAC,yBAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC;;;OAAA;IAGH,uBAAC;AAAD,CA9CA,AA8CC,CA9C6C,uCAAqB,GA8ClE","file":"webparts/crudSheet/CrudSheetWebPart.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport { IContact, Contact } from './components/Contact';\r\nimport { MockContactsService, ContactsService, IContactsService } from './components/ContactsService';\r\nimport CrudSheet from './components/CrudSheet';\r\nimport { ICrudSheetProps } from './components/CrudSheet';\r\nimport { Version, Environment, EnvironmentType } from '@microsoft/sp-core-library';\r\nimport { BaseClientSideWebPart } from '@microsoft/sp-webpart-base';\r\n\r\n\r\nexport default class CrudSheetWebPart extends BaseClientSideWebPart<void> {\r\n\r\n  private contactsService: IContactsService;\r\n  private sheet:React.ReactElement<ICrudSheetProps>;\r\n\r\n  protected onInit():Promise<void>{\r\n\r\n    this.saveContact = this.saveContact.bind(this);\r\n    this.deleteContact = this.deleteContact.bind(this);\r\n    this.addContact = this.addContact.bind(this);\r\n\r\n    this.contactsService = (Environment.type === EnvironmentType.Local) ?\r\n    new MockContactsService(): new ContactsService(this.context);\r\n\r\n    return super.onInit();\r\n  }\r\n\r\n  public render(): void {\r\n    this.context.statusRenderer.displayLoadingIndicator(this.domElement, \"Loading Contacts...\");\r\n    this.contactsService.getContacts().then((contacts) => { \r\n      this.context.statusRenderer.clearLoadingIndicator(this.domElement);\r\n      ReactDom.render(React.createElement(CrudSheet, { \r\n        \"contacts\": contacts, \r\n        \"saveContact\": this.saveContact,\r\n        \"deleteContact\": this.deleteContact,\r\n        \"addContact\": this.addContact}), this.domElement);\r\n    });\r\n  }\r\n\r\n  public saveContact(contact:IContact): Promise<Contact[]>{\r\n    return this.contactsService.saveContact(contact);\r\n  }\r\n\r\n  public deleteContact(contact:IContact): Promise<Contact[]>{\r\n    return this.contactsService.deleteContact(contact);\r\n  }\r\n\r\n  public addContact(): Promise<Contact[]>{\r\n    return this.contactsService.addContact();\r\n  }\r\n\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}
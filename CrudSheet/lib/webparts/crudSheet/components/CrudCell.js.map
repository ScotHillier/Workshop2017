{"version":3,"sources":["webparts/crudSheet/components/CrudCell.tsx"],"names":[],"mappings":";;;;;;AAAA,6BAA+B;AAgB/B;IAAsC,4BAA+C;IAQjF,kBAAY,KAAqB;QAAjC,YACI,kBAAM,KAAK,CAAC,SAWf;QATG,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACvB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACjC,KAAI,CAAC,KAAK,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC;QAEzD,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACnD,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC/C,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IACjD,CAAC;IAEM,yBAAM,GAAb;QACI,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA,CAAC;YACtC,MAAM,CAAC,CAAC,6BAAK,SAAS,EAAG,IAAI,CAAC,SAAS;gBAC9B,+BAAO,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAG,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,GAAI,CACpG,CAAC,CAAC;QACnB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,MAAM,CAAC,CAAC,6BAAK,SAAS,EAAG,IAAI,CAAC,SAAS;gBAC9B,8BAAM,aAAa,EAAE,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAQ,CAC/D,CAAC,CAAC;QACnB,CAAC;IACL,CAAC;IAEM,gCAAa,GAApB,UAAqB,KAAK;QACtB,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA,CAAC;YACjB,IAAI,CAAC,QAAQ,CAAC,EAAC,UAAU,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAC,CAAC,CAAC;QACnE,CAAC;IACL,CAAC;IAEM,8BAAW,GAAlB,UAAmB,KAAK;QACpB,IAAI,CAAC,QAAQ,CAAC,EAAC,UAAU,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC;IACvE,CAAC;IAEM,6BAAU,GAAjB,UAAkB,KAAK;QACpB,IAAI,CAAC,QAAQ,CAAC,EAAC,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC;QACpE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACvD,CAAC;IAEL,eAAC;AAAD,CAlDA,AAkDC,CAlDqC,KAAK,CAAC,SAAS,GAkDpD","file":"webparts/crudSheet/components/CrudCell.js","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport interface ICrudCellProps {\r\n  name: PropTypes.string.required;\r\n  value: PropTypes.string.required;\r\n  className: PropTypes.string.required;\r\n  readOnly: PropTypes.bool.required;\r\n  rowEdited: PropTypes.func.required;\r\n}\r\n\r\nexport interface ICrudCellState {\r\n    editMode: boolean;\r\n    editValue: string;\r\n}\r\n\r\nexport default class CrudCell extends React.Component<ICrudCellProps, ICrudCellState> {\r\n\r\n    private readOnly: boolean;\r\n    private name: string;\r\n    private value: string;\r\n    private className: string;\r\n    \r\n\r\n    constructor(props: ICrudCellProps){\r\n        super(props);\r\n        \r\n        this.readOnly = props.readOnly;\r\n        this.name = props.name;\r\n        this.value = props.value;\r\n        this.className = props.className;\r\n        this.state = { editMode: false, editValue: props.value };\r\n        \r\n        this.enableEditing = this.enableEditing.bind(this);\r\n        this.cellEditing = this.cellEditing.bind(this);\r\n        this.cellEdited = this.cellEdited.bind(this);\r\n    }\r\n\r\n    public render(): React.ReactElement<ICrudCellProps> {\r\n        if(!this.readOnly && this.state.editMode){\r\n            return (<div className={ this.className }>\r\n                     <input onChange={this.cellEditing}  onBlur={this.cellEdited} type=\"text\" value={this.state.editValue} />\r\n                   </div>);\r\n        }\r\n        else {\r\n            return (<div className={ this.className }>\r\n                     <span onDoubleClick={this.enableEditing} >{this.props.value}</span>\r\n                   </div>);\r\n        }\r\n    }\r\n\r\n    public enableEditing(event): void{\r\n        if(!this.readOnly){\r\n          this.setState({'editMode': true, 'editValue': this.props.value});\r\n        }\r\n    }\r\n\r\n    public cellEditing(event): void {\r\n        this.setState({'editMode': true, 'editValue': event.target.value});\r\n    }\r\n\r\n    public cellEdited(event): void {\r\n       this.setState({'editMode': false, 'editValue': event.target.value});\r\n       this.props.rowEdited(this.name, event.target.value);\r\n    }\r\n\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}